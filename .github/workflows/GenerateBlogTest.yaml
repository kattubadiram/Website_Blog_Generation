name: Blog Generation

on:
  workflow_dispatch:  # Only runs manually

permissions:
  contents: write  # Needed to push changes back to the repo

jobs:
  post-blog:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: üõ† Set up Python environment
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg libjpeg-dev zlib1g-dev libfreetype6-dev
          python3 -m venv .venv

      - name: üì¶ Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üì• Install Python dependencies
        run: |
          .venv/bin/pip install --upgrade pip setuptools
          .venv/bin/pip install --no-cache-dir \
            pytz requests python-dotenv openai>=1.0.0 \
            ffmpeg-python natsort pillow==9.5.0 imageio==2.31.1 imageio-ffmpeg==0.4.8 \
            moviepy==1.0.3 yfinance feedparser \
            google-cloud-texttospeech gtts

      - name: üìä Fetch market data
        run: .venv/bin/python market_snapshot_fetcher.py

      - name: ‚úçÔ∏è Generate blog content
        run: .venv/bin/python final.py
        env:
          OPENAI_API_KEY:   ${{ secrets.OPENAI_API_KEY }}
          WP_USERNAME:      ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD:  ${{ secrets.WP_APP_PASSWORD }}
          WP_SITE_URL:      ${{ secrets.WP_SITE_URL }}

      - name: üîê Write Google credentials
        run: echo "$GOOGLE_CREDENTIALS_JSON" > google-credentials.json
        env:
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}

      - name: üîç Verify Google Cloud auth
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/google-credentials.json"
          .venv/bin/python -c "from google.cloud import texttospeech; client = texttospeech.TextToSpeechClient(); print('Google Cloud auth works')"

      - name: üé§ Generate blog voiceover (MP3)
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/google-credentials.json"
          .venv/bin/python generate_audio_from_blog.py

      - name: üöÄ Commit and push voiceover to Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add blog_voiceover.mp3
          git commit -m "Add generated blog voiceover" || echo "No changes to commit"
          git push origin main
