name: Finance Blog Extended

on:
  # schedule:
    # 06:02 AM New-York time (GitHub cron uses UTC)
    # - cron: '2 10 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  post-blog:
    runs-on: ubuntu-latest

    steps:
      # ─────────────────── Repo & Python setup ──────────────────────
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Set up Python environment
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg libjpeg-dev zlib1g-dev libfreetype6-dev
          python3 -m venv .venv

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*.py', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          .venv/bin/pip install --upgrade pip setuptools

          # 1️⃣  Everything from the default PyPI index
          .venv/bin/pip install --no-cache-dir \
            pytz requests python-dotenv openai>=1.0.0 \
            ffmpeg-python natsort pillow==9.5.0 imageio==2.31.1 imageio-ffmpeg==0.4.8 \
            moviepy==1.0.3 yfinance feedparser pandas ta \
            beautifulsoup4 readability-lxml lxml \
            transformers accelerate sentencepiece \
            google-cloud-texttospeech gtts

          # 2️⃣  CPU-only PyTorch from its own wheel index
          .venv/bin/pip install --no-cache-dir \
            --index-url https://download.pytorch.org/whl/cpu \
            torch

      # ─────────────────── Data-collection phase ────────────────────
      - name: Fetch breadth / trend data
        run: .venv/bin/python trend.py


      # Optional extra snapshot (kept from original flow)
      - name: Fetch market data and save snapshot
        run: .venv/bin/python market_snapshot_fetcher.py

      - name: Verify ffmpeg-python is importable
        run: .venv/bin/python -c "import ffmpeg; print('ffmpeg-python works')"

      # ─────────────────── Blog generation ──────────────────────────
      - name: Generate blog and summary
        run: .venv/bin/python modular_blog.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          WP_USERNAME:     ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
          WP_SITE_URL:     ${{ secrets.WP_SITE_URL }}

      # ─────────────────── GCP credentials & voice-over ────────────
      - name: Write Google credentials to file
        run: echo "$GOOGLE_CREDENTIALS_JSON" > google-credentials.json
        env:
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}

      - name: Verify Google Cloud credentials
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/google-credentials.json"
          .venv/bin/python - <<'PY'
          from google.cloud import texttospeech
          texttospeech.TextToSpeechClient()
          print("Google Cloud auth OK")
          PY

      - name: Generate blog voice-over
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/google-credentials.json"
          .venv/bin/python generate_audio_from_blog.py

      - name: Generate 20s video narration
        run: .venv/bin/python generate_video_prompt.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Generate avatar video
        run: .venv/bin/python generate_video_heygen.py
        env:
          HEYGEN_API_KEY: ${{ secrets.HEYGEN_API1 }}

      - name: Save generated avatar video immediately
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add avatar_video.mp4
          git commit -m "Save generated avatar_video.mp4 [skip ci]" || echo "No avatar video changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push
          


      # ─────────────────── Publish to WordPress & video upload ──────
      - name: Upload blog audio to WordPress
        run: .venv/bin/python upload_audio_and_embed.py
        env:
          WP_USERNAME:     ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
          WP_SITE_URL:     ${{ secrets.WP_SITE_URL }}

      - name: Upload video to WordPress
        run: .venv/bin/python upload_to_wp.py
        env:
          WP_USERNAME:     ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
          WP_SITE_URL:     ${{ secrets.WP_SITE_URL }}

      # ─────────────────── Commit history logs back to repo ─────────
      - name: Commit history logs
        if: success()
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add blog_history.txt market_snapshot_log.jsonl
          git commit -m "Update history logs [skip ci]" || echo "No changes"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push
